{"version":3,"sources":["serviceWorker.js","Pages/Home.jsx","Pages/About.jsx","Components/topic.jsx","Pages/Topics.jsx","Pages/Apps/WeatherApp.jsx","Pages/Apps/TimeBomb.jsx","Pages/Apps/ToDoList.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Home","react_default","a","createElement","className","About","Topic","_ref","params","topicId","Topics","Link","to","concat","url","Route","path","component","exact","render","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","text","info","weather","fetchedWeather","handleChange","bind","assertThisInitialized","handleSubmit","e","setState","target","value","preventDefault","length","fetch","resp","json","body","cod","alert","console","log","clear","WeatherApp_Weather","onSubmit","htmlFor","id","onChange","React","Component","Weather","class","name","sys","country","main","description","src","icon","alt","seconds","clearInterval","interval","_this2","setInterval","tick","TodoApp","items","ToDoList_TodoList","newItem","Date","now","TodoList","map","item","key","BasicExample","BrowserRouter","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","aria-haspopup","aria-labelledby","basename","process","WeatherApp","TimeBomb","toDoList","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9b3d9ac3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nconst Home = () => (\r\n  <div className=\"jumbotron\">\r\n    <h2>Home</h2>\r\n  </div>\r\n);\r\nexport default Home;\r\n","import React from \"react\";\r\nconst About = () => (\r\n  <div>\r\n    <h2>About</h2>\r\n  </div>\r\n);\r\nexport default About;\r\n","import React from \"react\";\r\nconst Topic = ({ match }) => (\r\n  <div>\r\n    <h3>{match.params.topicId}</h3>\r\n  </div>\r\n);\r\nexport default Topic;\r\n","import React from \"react\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport Topic from \"../Components/topic\";\r\nconst Topics = ({ match }) => (\r\n  <div>\r\n    <h2>Topics</h2>\r\n    <ul>\r\n      <li>\r\n        <Link to={`${match.url}/rendering`}>Rendering with React</Link>\r\n      </li>\r\n      <li>\r\n        <Link to={`${match.url}/components`}>Components</Link>\r\n      </li>\r\n      <li>\r\n        <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\r\n      </li>\r\n    </ul>\r\n\r\n    <Route path={`${match.url}/:topicId`} component={Topic} />\r\n    <Route\r\n      exact\r\n      path={match.url}\r\n      render={() => <h3>Please select a topic.</h3>}\r\n    />\r\n  </div>\r\n);\r\nexport default Topics;\r\n","import React from \"react\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: \"\",\r\n      info: {},\r\n      weather: {},\r\n      fetchedWeather: false\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(e) {\r\n    this.setState({ text: e.target.value });\r\n  }\r\n  componentDidMount() {}\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!this.state.text.length) {\r\n      return;\r\n    }\r\n    var resp = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${\r\n        this.state.text\r\n      }&APPID=0859738556d31d34de4c7cf532000218`\r\n    );\r\n    var body = await resp.json();\r\n    if (body.cod === \"404\") {\r\n      return alert(\"Location Not found.\");\r\n    } else {\r\n      console.log(body);\r\n      this.setState({ info: body });\r\n      this.setState({ weather: body.weather[0] });\r\n      this.setState({ fetchedWeather: true });\r\n      console.clear();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Weather App</h1>\r\n        <hr />\r\n        <Weather\r\n          info={this.state.info}\r\n          weather={this.state.weather}\r\n          fetchedWeather={this.state.fetchedWeather}\r\n        />\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"new-todo\">City Name:</label>\r\n          <input\r\n            id=\"new-todo\"\r\n            onChange={this.handleChange}\r\n            value={this.state.text}\r\n          />\r\n          <button className=\"btn btn-primary btn-sm\">GET LOCATION</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass Weather extends React.Component {\r\n  render() {\r\n    if (this.props.fetchedWeather === true) {\r\n      return (\r\n        <div>\r\n          <table class=\"table\">\r\n            <thead>\r\n              <td>City</td>\r\n              <td>Country</td>\r\n              <td>Weather</td>\r\n              <td>Description</td>\r\n              <td>Icon</td>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>{this.props.info.name}</td>\r\n                <td>{this.props.info.sys.country}</td>\r\n                <td>{this.props.weather.main}</td>\r\n                <td>{this.props.weather.description}</td>\r\n                <td>\r\n                  <img\r\n                    src={`http://openweathermap.org/img/w/${\r\n                      this.props.weather.icon\r\n                    }.png`}\r\n                    alt=\"gayhe\"\r\n                  />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      seconds: 0\r\n    };\r\n  }\r\n  tick() {\r\n    this.setState(state => ({\r\n      seconds: state.seconds + 1\r\n    }));\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => this.tick(), 1000);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Time Bomb</h1>\r\n        Seconds that have passed: <b>{this.state.seconds}</b> seconds.\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nclass TodoApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { items: [], text: \"\" };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>TODO</h3>\r\n        <TodoList items={this.state.items} />\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"new-todo\">What needs to be done?</label>\r\n          <input\r\n            id=\"new-todo\"\r\n            onChange={this.handleChange}\r\n            value={this.state.text}\r\n          />\r\n          <button className=\"btn btn-primary btn-sm\">\r\n            Add #{this.state.items.length + 1}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ text: e.target.value });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!this.state.text.length) {\r\n      return;\r\n    }\r\n    const newItem = {\r\n      text: this.state.text,\r\n      id: Date.now()\r\n    };\r\n    this.setState(state => ({\r\n      items: state.items.concat(newItem),\r\n      text: \"\"\r\n    }));\r\n  }\r\n}\r\n\r\nclass TodoList extends React.Component {\r\n  render() {\r\n    return (\r\n      <ul>\r\n        {this.props.items.map(item => (\r\n          <li key={item.id}>{item.text}</li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoApp;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"./serviceWorker\";\nimport Home from \"./Pages/Home\";\nimport About from \"./Pages/About\";\nimport Topics from \"./Pages/Topics\";\nimport WeatherApp from \"./Pages/Apps/WeatherApp\";\nimport TimeBomb from \"./Pages/Apps/TimeBomb\";\nimport toDoList from \"./Pages/Apps/ToDoList\";\nimport \"./css/Bootstrap.scss\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\nimport NoMatch from \"./Pages/NoMatch\";\nimport $ from \"jquery\";\nimport Popper from \"popper.js\";\nconst BasicExample = () => (\n  <Router>\n    <div>\n      <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"/\" to=\"/\">\n          Website\n        </a>\n        <button\n          class=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"navbar-toggler-icon\" />\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul class=\"navbar-nav\">\n            <li class=\"nav-item active\">\n              <Link class=\"nav-link\" to=\"/\">\n                Home <span class=\"sr-only\">(current)</span>\n              </Link>\n            </li>\n            <li class=\"nav-item\">\n              <Link class=\"nav-link\" to=\"/about\">\n                About\n              </Link>\n            </li>\n            <li class=\"nav-item\">\n              <Link class=\"nav-link\" to=\"/topics\">\n                Topics\n              </Link>\n            </li>\n            <li class=\"nav-item dropdown\" id=\"dd1\">\n              <a\n                class=\"nav-link dropdown-toggle\"\n                id=\"navbarDropdownMenuLink\"\n                role=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                Projects\n              </a>\n              <div\n                class=\"dropdown-menu\"\n                aria-labelledby=\"navbarDropdownMenuLink\"\n              >\n                <Link class=\"dropdown-item\" to=\"/project/weather-app\">\n                  Weather App\n                </Link>\n                <Link class=\"dropdown-item\" to=\"/project/time-bomb\">\n                  Time Bomb\n                </Link>\n                <Link class=\"dropdown-item\" to=\"/project/todo-list\">\n                  Todo List\n                </Link>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </nav>\n\n      <hr />\n      <Route\n        exact\n        basename={process.env.PUBLIC_URL}\n        path=\"/\"\n        component={Home}\n      />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/topics\" component={Topics} />\n      <Route exact path=\"/project/weather-app\" component={WeatherApp} />\n      <Route exact path=\"/project/time-bomb\" component={TimeBomb} />\n      <Route exact path=\"/project/todo-list\" component={toDoList} />\n    </div>\n  </Router>\n);\n\nexport default BasicExample;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}